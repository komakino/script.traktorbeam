import xbmc, xbmcgui, os
from traktorbeam import addon, log, trakt, imdb
from traktorbeam.helpers import clean_title

def generateLink(item):

    action = addon.getSetting('action')

    if item["type"] is 'show':
        return "plugin://plugin.video.pulsar/show/%s/season/%s/episode/%s/%s" % (item["id"],item["season"],item["episode"],action)
    elif item["type"] is 'movie':
        return "plugin://plugin.video.pulsar/movie/%s/%s" % (item["id"],action)

def generateNfoLink(item):

    if item["type"] is 'show':
        return "http://thetvdb.com/?tab=episode&seriesid=%s&id=%s" % (item["id"],item["episode_id"])
    elif item["type"] is 'movie':
        return "http://www.imdb.com/title/%s" % item["id"]

def createFile(item):
    basepath = xbmc.translatePath(addon.getSetting(item["type"] + '_folder'))

    link        = generateLink(item)
    nfoLink     = generateNfoLink(item)

    item["title"] = clean_title(item["title"])

    if item["type"] is 'show':
        item["episode_title"] = clean_title(item["episode_title"])

        titleyear   = '%s' % (item["title"])
        path        = os.path.join(basepath,titleyear,'Season %s' % item["season"])
        filename    = 'S%02dE%02d' % (item["season"],item["episode"])

    elif item["type"] is 'movie':
        titleyear   = '%s (%s)' % (item["title"],item["year"])
        path        = os.path.join(basepath,titleyear)
        filename    = titleyear

    filepath = os.path.join(path,filename)

    if not os.path.exists(path):
        try:
            os.makedirs(path)
        except:
            pass

    if not os.path.isfile(filepath + '.strm'):

        with open(filepath + '.strm', "w") as strm_file:  # create .strm
            strm_file.write(link)
            log.info('File created: %s' % filename)

        with open(filepath + '.nfo', "w") as nfo_file:  # create .strm
            nfo_file.write(nfoLink)
            log.info('File created: %s' % filename)

        return True

    else: 
        return False

def syncList(list):
    num = 0 

    for item in list:
        if createFile(item):
            num+=1

    if num > 0 and not xbmc.getCondVisibility('Library.IsScanningVideo'):
        xbmc.executebuiltin('XBMC.UpdateLibrary(video)')

    return num

def trakt_syncEpisodes():
    items = trakt.getEpisodes()
    if items:
        syncList(items)

def trakt_syncWatchlist():
    items = trakt.getWatchlist()
    if items:
        syncList(items)

def imdb_syncWatchlist():
    items = imdb.getWatchlist()
    if items:
        syncList(items)

def imdb_syncUserList():
    items = imdb.getUserlist()
    if items:
        num = syncList(items)
        xbmcgui.Dialog().notification('TraktorBeam','%s new Movies added to library.' % str(num).replace('0','No'), icon=xbmcgui.NOTIFICATION_INFO)